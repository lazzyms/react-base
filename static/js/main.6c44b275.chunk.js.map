{"version":3,"sources":["components/Product.jsx","components/Users.jsx","components/Home.jsx","actions/userActions.jsx","Login.jsx","components/SidebarRoute.jsx","App.js","serviceWorker.js","reducer/userReducer.jsx","index.js"],"names":["Product","props","state","products","name","price","checked","Container","Table","striped","bordered","hover","this","map","product","i","Form","Check","type","Component","Users","Home","Row","className","cookie","Cookies","mapActionToProps","onUserLogin","newUser","set","payload","user","isLoggedIn","onApiRequest","dispatch","axios","get","then","res","console","log","catch","err","connect","useState","email","setEmail","password","setPassword","to","onSubmit","event","preventDefault","data","target","elements","value","post","token","FormGroup","controlId","Text","FormControl","autoFocus","onChange","e","Button","block","disabled","length","SidebarRoute","Navbar","collapseOnSelect","expand","bg","variant","Brand","Nav","style","width","Link","fontSize","icon","faHome","size","inverse","faBox","faUser","onClick","handleUserLogout","mql","window","matchMedia","routes","path","exact","main","App","sidebarDocked","matches","sidebarOpen","isAuthenticated","mediaQueryChanged","bind","onSetSidebarOpen","handleLogout","addListener","removeListener","open","setState","onUserLogout","sidebar","onSetOpen","shadow","docked","route","index","key","children","React","Boolean","location","hostname","match","initState","allStoreEnhancer","compose","applyMiddleware","thunk","devToolsExtension","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6c44b275.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Form, Container } from 'react-bootstrap';\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            products: [\n                {\n                    name: 'p1',\n                    price: 100,\n                    checked: false\n                },\n                {\n                    name: 'p2',\n                    price: 100,\n                    checked: false\n                },\n                {\n                    name: 'p3',\n                    price: 100,\n                    checked: false\n                },\n                {\n                    name: 'p4',\n                    price: 100,\n                    checked: false\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <h1>Products</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>id</th>\n                            <th>Name</th>\n                            <th>Price</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.products.map((product, i) => {\n                            return (<tr>\n                                <td><Form.Check type=\"checkbox\"/></td>\n                                <td>{i + 1}</td>\n                                <td>{product.name}</td>\n                                <td>{product.price}</td>\n                            </tr>)\n                        })}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n\n}\n\nexport default Product","import React, { Component } from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [\n        {\n          name: \"u1\",\n          price: 100,\n          checked: false,\n        },\n        {\n          name: \"u2\",\n          price: 100,\n          checked: false,\n        },\n        {\n          name: \"u3\",\n          price: 100,\n          checked: false,\n        },\n        {\n          name: \"u4\",\n          price: 100,\n          checked: false,\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Users</h1>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>Name</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.products.map((product, i) => {\n              return (\n                <tr>\n                  <td>{i + 1}</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"justify-content-center pt-5\">\n          <h1>Home</h1>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import axios from \"axios\";\nimport { Cookies } from \"react-cookie\";\n\nexport const USER_LOGIN = \"user:userLogin\";\nexport const USER_LOGOUT = \"user:userLogout\";\n\nlet cookie = new Cookies();\nexport function userLogin(newUser) {\n  cookie.set(\"user\", newUser);\n  return {\n    type: USER_LOGIN,\n    payload: {\n      user: newUser,\n      isLoggedIn: true,\n    },\n  };\n}\n\nexport function userLogout() {\n  cookie.set(\"user\", null);\n  return {\n    type: USER_LOGIN,\n    payload: {\n      user: null,\n      isLoggedIn: false,\n    },\n  };\n}\n\nexport function apiRequest() {\n  return (dispatch) => {\n    axios\n      .get(\"https://mauliksompura.in\")\n      .then((res) => {\n        console.log(\"success\");\n      })\n      .catch((err) => {\n        console.log(\"fail\");\n      });\n  };\n}\n\n// TODO store cookie on login and destroy it on logout\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormGroup,\n  FormControl,\n  Form,\n  Container,\n  Row,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { userLogin, apiRequest } from \"./actions/userActions\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Login(props) {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n \n  function handleSubmit(event) {\n    event.preventDefault();\n    let data = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n    axios\n      .post(\"https://reqres.in/api/login\", data)\n      .then((res) => {\n        props.onUserLogin(res.data.token);\n      })\n      .catch((err) => {\n        console.log({ err });\n      });\n  }\n\n  if (!props.user) {\n    return (\n      <Container className=\"Login\">\n        <Row className=\"justify-content-center pt-5\">\n          <form onSubmit={handleSubmit}>\n            <h1>Demo Login</h1>\n            <p>\n              (use email: eve.holt@reqres.in and <br />\n              password: cityslicka, for successfull login)\n            </p>\n            <FormGroup controlId=\"email\">\n              <Form.Text>Email</Form.Text>\n              <FormControl\n                autoFocus\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"password\">\n              <Form.Text>Password</Form.Text>\n              <FormControl\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n              />\n            </FormGroup>\n            <Button block disabled={!validateForm()} type=\"submit\">\n              Login\n            </Button>\n          </form>\n        </Row>\n      </Container>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapActionToProps = {\n  onUserLogin: userLogin,\n  onApiRequest: apiRequest,\n};\n\n// const mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n//   console.log({ propsFromState, propsFromDispatch, ownProps })\n//   return {};\n// }\n\nexport default connect(mapStateToProps, mapActionToProps)(Login);\n","import React, { Component } from \"react\";\nimport { Nav, Navbar, Row } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faBox, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nclass SidebarRoute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"light\"\n        variant=\"light\"\n        className=\"flex-column h-100\"\n      >\n        <Navbar.Brand to=\"/\" className=\"mt-1\">\n          Title | Logo\n        </Navbar.Brand>\n        <hr className=\"bg-dark text-white\" />\n        <Nav className=\"flex-column pl-2 pt-5\" style={{ width: \"150px\" }}>\n          <LinkContainer to=\"/\">\n            <Nav.Link>\n              <Row style={{ fontSize: \"16px\" }}>\n                <FontAwesomeIcon icon={faHome} size=\"lg\" inverse />\n                &nbsp;&nbsp;Home\n              </Row>\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/products\">\n            <Nav.Link>\n              <Row style={{ fontSize: \"16px\" }}>\n                <FontAwesomeIcon icon={faBox} size=\"lg\" inverse />\n                &nbsp;&nbsp;Products\n              </Row>\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/users\">\n            <Nav.Link>\n              <Row style={{ fontSize: \"16px\" }}>\n                <FontAwesomeIcon icon={faUser} size=\"lg\" inverse />\n                &nbsp;&nbsp;Users\n              </Row>\n            </Nav.Link>\n          </LinkContainer>\n          <Nav.Link onClick={() => this.props.handleUserLogout()}>\n            Logout\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default SidebarRoute;\n","import React from 'react';\nimport Sidebar from \"react-sidebar\";\nimport Product from './components/Product';\nimport Users from './components/Users';\nimport Home from './components/Home';\nimport Login from './Login';\nimport SidebarRoute from './components/SidebarRoute';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { userLogout } from './actions/userActions'\n\nconst mql = window.matchMedia(`(min-width: 800px)`);\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <Home />\n  },\n  {\n    path: \"/users\",\n    main: () => <Users />\n  },\n  {\n    path: \"/products\",\n    main: () => <Product />\n  },\n  {\n    path: \"/login\",\n    exact: true,\n    main: () => <Login />\n  }\n];\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarDocked: mql.matches,\n      sidebarOpen: false,\n      isAuthenticated: false\n    };\n\n    this.mediaQueryChanged = this.mediaQueryChanged.bind(this);\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentWillMount() {\n    mql.addListener(this.mediaQueryChanged);\n  }\n\n  componentWillUnmount() {\n    this.state.mql.removeListener(this.mediaQueryChanged);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  mediaQueryChanged() {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\n  }\n\n  handleLogout() {\n    this.props.onUserLogout()\n  }\n\n  render() {\n    // console.log(this.props.user)\n    if (!this.props.user) {\n      return <Router>\n        <Redirect to=\"/login\" />\n        <Switch>\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              children={<route.main />}\n            />\n          ))}\n        </Switch>\n      </Router>\n    } else {\n      return (\n        <Router>\n          <Sidebar\n            sidebar={<SidebarRoute handleUserLogout={this.handleLogout} />}\n            open={this.state.sidebarOpen}\n            onSetOpen={this.onSetSidebarOpen}\n            shadow={false}\n            docked={true}\n\n          >\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={<route.main />}\n                />\n              ))}\n            </Switch>\n          </Sidebar>\n        </Router>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapActionToProps = {\n  onUserLogout: userLogout\n}\n\n// const mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n//   console.log({ propsFromState, propsFromDispatch, ownProps })\n//   return {};\n// }\n\nexport default connect(mapStateToProps, mapActionToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_LOGIN, USER_LOGOUT } from \"../actions/userActions\";\nimport { Cookies } from \"react-cookie\";\n\nfunction initState() {\n  let cookie = new Cookies();\n  let user = cookie.get(\"user\");\n  if (user) {\n    return {\n      user: user,\n      isLoggedIn: true,\n    };\n  } else {\n    return {\n      user: null,\n      isLoggedIn: false,\n    };\n  }\n}\n\nexport default function userReducer(state = initState, { type, payload }) {\n  switch (type) {\n    case USER_LOGIN:\n      return payload;\n    case USER_LOGOUT:\n      return payload;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport userReducer from './reducer/userReducer'\n\n// const allReducers = combineReducers({\n//   user: userReducer\n// })\n\nconst allStoreEnhancer = compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension && window.devToolsExtension()\n)\n\nconst store = createStore(userReducer, allStoreEnhancer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}